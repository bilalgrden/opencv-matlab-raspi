function [varargout] = gui(varargin)

% GUI MATLAB code for gui.fig
%      GUI, by itself, creates a new GUI or raises the existing
%      singleton*.
%
%      H = GUI returns the handle to a new GUI or the handle to
%      the existing singleton*.
%
%      GUI('CALLBACK',hObject,eventData,handles,...) calls the local
%      function named CALLBACK in GUI.M with the given input arguments.
%
%      GUI('Property','Value',...) creates a new GUI or raises the
%      existing singleton*.  Starting from the left, property value pairs are
%      applied to the GUI before gui_OpeningFcn gets called.  An
%      unrecognized property name or invalid value makes property application
%      stop.  All inputs are passed to gui_OpeningFcn via varargin.
%
%      *See GUI Options on GUIDE's Tools menu.  Choose "GUI allows only one
%      instance to run (singleton)".
%
% See also: GUIDE, GUIDATA, GUIHANDLES

% Edit the above text to modify the response to help gui

% Last Modified by GUIDE v2.5 09-Apr-2019 12:31:23

% Begin initialization code - DO NOT EDIT
gui_Singleton = 1;
gui_State = struct('gui_Name',       mfilename, ...
                   'gui_Singleton',  gui_Singleton, ...
                   'gui_OpeningFcn', @gui_OpeningFcn, ...
                   'gui_OutputFcn',  @gui_OutputFcn, ...
                   'gui_LayoutFcn',  [] , ...
                   'gui_Callback',   []);
if nargin && ischar(varargin{1})
    gui_State.gui_Callback = str2func(varargin{1});
end

if nargout
    [varargout{1:nargout}] = gui_mainfcn(gui_State, varargin{:});
else
    gui_mainfcn(gui_State, varargin{:});
end
    
% End initialization code - DO NOT EDIT
end

% --- Executes just before gui is made visible.
function gui_OpeningFcn(hObject, eventdata, handles, varargin)
% This function has no output args, see OutputFcn.
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
% varargin   command line arguments to gui (see VARARGIN)

% Choose default command line output for gui

handles.output = hObject;

axes(handles.axes0);
imshow('klu_logo.jpg');

axes(handles.axes1);
imshow('kirmizi_buyuk_daire_orta.jpg');

axes(handles.axes2);
imshow('kirmizi_daire_buyuk.jpg');

axes(handles.axes3);
imshow('kirmizi_daire_orta.jpg');

axes(handles.axes4);
imshow('kirmizi_dikdortgen_buyuk.jpg');

axes(handles.axes5);
imshow('kirmizi_dikdortgen_kucuk.jpg');

axes(handles.axes6);
imshow('yesil_daire_kucuk.jpg');

axes(handles.axes7);
imshow('yesil_daire_orta.jpg');

axes(handles.axes8);
imshow('mavi_buyuk_daire_orta.jpg');

axes(handles.axes9);
imshow('mavi_daire_buyuk.jpg');

axes(handles.axes10);
imshow('mavi_daire_kucuk.jpg');

axes(handles.axes11);
imshow('mavi_dikdörtgen.jpg');

axes(handles.axes12);
imshow('mavi_ucgen.jpg');

axes(handles.axes13);
imshow('yesil_dildortgen_buyuk.jpg');

axes(handles.axes14);
imshow('yesil_ucgen.jpg');

axes(handles.axes15);
imshow('kirmizi_buyuk_daire_orta.jpg');

axes(handles.axes16);
imshow('gri.jpg');

axes(handles.axes17);
imshow('gri.jpg');

axes(handles.axes18);
imshow('gri.jpg');

    set(handles.urun_bilgisi_1,'String','D:0   Y:0');
    set(handles.urun_bilgisi_2,'String','D:0   Y:0');
    set(handles.urun_bilgisi_3,'String','D:0   Y:0');
    set(handles.urun_bilgisi_4,'String','D:0   Y:0');
    set(handles.urun_bilgisi_5,'String','D:0   Y:0');
    set(handles.urun_bilgisi_6,'String','D:0   Y:0');
    set(handles.urun_bilgisi_7,'String','D:0   Y:0');
    set(handles.urun_bilgisi_8,'String','D:0   Y:0');
    set(handles.urun_bilgisi_9,'String','D:0   Y:0');
    set(handles.urun_bilgisi_10,'String','D:0   Y:0');
    set(handles.urun_bilgisi_11,'String','D:0   Y:0');
    set(handles.urun_bilgisi_12,'String','D:0   Y:0');
    set(handles.urun_bilgisi_13,'String','D:0   Y:0');
    set(handles.urun_bilgisi_14,'String','D:0   Y:0');
    
    set(handles.secilen_urun,'String','Seçilen Ürün : urun_1');

global urun_bilgisi
global dogru_deger
global yanlis_deger
global toplam_dogru
global toplam_yanlis
global urun_case

global yanlis_deger1
global yanlis_deger2
global yanlis_deger3
global yanlis_deger4
global yanlis_deger5
global yanlis_deger6
global yanlis_deger7
global yanlis_deger8
global yanlis_deger9
global yanlis_deger10
global yanlis_deger11
global yanlis_deger12
global yanlis_deger13
global yanlis_deger14

global dogru_deger1
global dogru_deger2
global dogru_deger3
global dogru_deger4
global dogru_deger5
global dogru_deger6
global dogru_deger7
global dogru_deger8
global dogru_deger9
global dogru_deger10
global dogru_deger11
global dogru_deger12
global dogru_deger13
global dogru_deger14

global myPi
global myCam
global s_sol
global s_sag
global s_zemin
global systemvalue
global urunvalue
global urunarea_ic
global urunarea_dis
global kenar1
global kenar2
global Red_value
global Green_value
global Blue_value


 urun_bilgisi='urun_bilgisi_1';
 dogru_deger=0;
 yanlis_deger=0;
 toplam_dogru=0;
 toplam_yanlis=0;
 urun_case=1;
 
systemvalue=0;
urunvalue=1;
urunarea_ic=0;
urunarea_dis=0;
kenar1=0;
kenar2=0;


 yanlis_deger1=0;
 yanlis_deger2=0;
 yanlis_deger3=0;
 yanlis_deger4=0;
 yanlis_deger5=0;
 yanlis_deger6=0;
 yanlis_deger7=0;
 yanlis_deger8=0;
 yanlis_deger9=0;
 yanlis_deger10=0;
 yanlis_deger11=0;
 yanlis_deger12=0;
 yanlis_deger13=0;
 yanlis_deger14=0;

 dogru_deger1=0;
 dogru_deger2=0;
 dogru_deger3=0;
 dogru_deger4=0;
 dogru_deger5=0;
 dogru_deger6=0;
 dogru_deger7=0;
 dogru_deger8=0;
 dogru_deger9=0;
 dogru_deger10=0;
 dogru_deger11=0;
 dogru_deger12=0;
 dogru_deger13=0;
 dogru_deger14=0;
 
Red_value=0;
Green_value=0;
Blue_value=0;


[myPi,myCam,s_sol,s_sag,s_zemin]=raspi_congigure_processing();             % Raspi, Cam, Pinler yapılandırıldı.

writeDigitalPin(myPi, 20,0);
writeDigitalPin(myPi, 21,0);
writeDigitalPin(myPi, 16,0);
writeDigitalPin(myPi, 12,0);

robot_arm_processing_base(s_sol,s_sag,s_zemin);                            % Robot base konumuna gönderildi.
fprintf('0');

% Update handles structure
guidata(hObject, handles);

% UIWAIT makes gui wait for user response (see UIRESUME)
% uiwait(handles.figure1);

end

% --- Outputs from this function are returned to the command line.
function [varargout]  = gui_OutputFcn(hObject, eventdata, handles) 
% varargout  cell array for returning output args (see VARARGOUT);
% hObject    handle to figure
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

% Get default command line output from handles structure

% [myPi,myCam,s_sol,s_sag,s_zemin]=raspi_congigure_processing()
varargout{1} = handles.output;

end

% --- Executes on button press in basla.
function basla_Callback(hObject, eventdata, handles)
% hObject    handle to basla (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

global myPi
global myCam
global s_sol
global s_sag
global s_zemin
global systemvalue
global urunvalue
global urunarea_ic
global urunarea_dis
global kenar1
global kenar2
global Red_value

global toplam_dogru
global toplam_yanlis
global dogru_deger
global yanlis_deger
global urun_bilgisi

global yanlis_deger1
global yanlis_deger2
global yanlis_deger3
global yanlis_deger4
global yanlis_deger5
global yanlis_deger6
global yanlis_deger7
global yanlis_deger8
global yanlis_deger9
global yanlis_deger10
global yanlis_deger11
global yanlis_deger12
global yanlis_deger13
global yanlis_deger14

global dogru_deger1
global dogru_deger2
global dogru_deger3
global dogru_deger4
global dogru_deger5
global dogru_deger6
global dogru_deger7
global dogru_deger8
global dogru_deger9
global dogru_deger10
global dogru_deger11
global dogru_deger12
global dogru_deger13
global dogru_deger14

toplam_dogru=0;
toplam_yanlis=0;

 yanlis_deger1=0;
 yanlis_deger2=0;
 yanlis_deger3=0;
 yanlis_deger4=0;
 yanlis_deger5=0;
 yanlis_deger6=0;
 yanlis_deger7=0;
 yanlis_deger8=0;
 yanlis_deger9=0;
 yanlis_deger10=0;
 yanlis_deger11=0;
 yanlis_deger12=0;
 yanlis_deger13=0;
 yanlis_deger14=0;

 dogru_deger1=0;
 dogru_deger2=0;
 dogru_deger3=0;
 dogru_deger4=0;
 dogru_deger5=0;
 dogru_deger6=0;
 dogru_deger7=0;
 dogru_deger8=0;
 dogru_deger9=0;
 dogru_deger10=0;
 dogru_deger11=0;
 dogru_deger12=0;
 dogru_deger13=0;
 dogru_deger14=0;
 
 Area_3=0;
 Kenar_1=0;
 Kenar_2=0;
 
    set(handles.urun_bilgisi_1,'String','D:0   Y:0');
    set(handles.urun_bilgisi_2,'String','D:0   Y:0');
    set(handles.urun_bilgisi_3,'String','D:0   Y:0');
    set(handles.urun_bilgisi_4,'String','D:0   Y:0');
    set(handles.urun_bilgisi_5,'String','D:0   Y:0');
    set(handles.urun_bilgisi_6,'String','D:0   Y:0');
    set(handles.urun_bilgisi_7,'String','D:0   Y:0');
    set(handles.urun_bilgisi_8,'String','D:0   Y:0');
    set(handles.urun_bilgisi_9,'String','D:0   Y:0');
    set(handles.urun_bilgisi_10,'String','D:0   Y:0');
    set(handles.urun_bilgisi_11,'String','D:0   Y:0');
    set(handles.urun_bilgisi_12,'String','D:0   Y:0');
    set(handles.urun_bilgisi_13,'String','D:0   Y:0');
    set(handles.urun_bilgisi_14,'String','D:0   Y:0');
    

topdog=sprintf('Toplam Dogru : %d',toplam_dogru);
set(handles.toplam_dogru_,'String',topdog);

topyan=sprintf('Toplam Yanlis : %d',toplam_yanlis);
set(handles.toplam_yanlis_,'String',topyan);

systemvalue=1;
fprintf('1');

writeDigitalPin(myPi, 12,1); %lazer
writeDigitalPin(myPi, 16,1); %motor
writeDigitalPin(myPi, 20,0); %aydınlatma

pause(1);

while(systemvalue==1)

[urun]=camera_processing(myCam);

axes(handles.axes16);
imshow(urun);

LDR=readDigitalPin(myPi, 19);
 
if LDR==1                           %LDR ışığı alıyor. Motor çalışmasını sürdürüyor.
    
    writeDigitalPin(myPi, 16,1);

end
%

if LDR==0                           %Ürün geldi. Işık kesildi. Motor durdu. Resim çekildi.
    
    writeDigitalPin(myPi, 20,1); %aydınlatma
    writeDigitalPin(myPi, 12,0); %lazer
    writeDigitalPin(myPi, 16,0); %motor
      
    for i=0 : 100
        
        [urun]=camera_processing(myCam);
        
    end
    
    axes(handles.axes17);
    imshow(urun);

    [value,resim_bw]=color_processing(urun);
    [Kenar1,Kenar2]=figure_processing(resim_bw);
    [Area_1,Centroid_1,imag_bw]=area_processing_1(resim_bw);
    [Area_2,Centroid_2]=area_processing_2(resim_bw);
        
    Area_3=Area_2-Area_1;
    
    Kenar_1=(0.0192823007339136*Kenar1);
    
    Kenar_2=(0.0192823007339136*Kenar2);
    
    axes(handles.axes18);
    imshow(imag_bw);
        
    if value==1
        
        a1=sprintf('Ürün rengi : Kırmızı ');
        
    elseif value==2
        
        a1=sprintf('Ürün rengi : Yeşil ');
        
    elseif value==3
        
        a1=sprintf('Ürün rengi : Mavi ');
        
    end
    
    a2=sprintf('Ürün Tam Alanı : %d ',Area_2);
    a3=sprintf('Ürün Boşluklu Alanı : %d ',Area_1);
    a4=sprintf('Ürün Kısa Kenarı : %g cm',Kenar_1);
    a5=sprintf('Ürün Uzun Kenarı : %g cm',Kenar_2);   
    a6=sprintf('Ürün İç Şekli Alanı : %d ',Area_3);
          
    set(handles.urun_rengi,'String',a1);
    set(handles.urun_ic_alan,'String',a2);
    set(handles.urun_dis_alan,'String',a3);
    set(handles.urun_kisa_kenar,'String',a4);
    set(handles.urun_uzun_kenar,'String',a5);
    set(handles.urun_ic_sekli_alani,'String',a6);
   
    
    if      Area_3>1000 && Area_3<3000
        
        set(handles.urun_ic_sekli,'String','Ürün İç Şekli : Küçük Yuvarlak');
        
    elseif  Area_3>4000 && Area_3<6000
        
        set(handles.urun_ic_sekli,'String','Ürün İç Şekli : Üçgen');
        
    elseif  Area_3>7500 && Area_3<9500
        
        set(handles.urun_ic_sekli,'String','Ürün İç Şekli : Orta Yuvarlak');
        
    elseif  Area_3>11000 && Area_3<13000
        
        set(handles.urun_ic_sekli,'String','Ürün İç Şekli : Küçük Dikdörtgen');
        
    elseif  Area_3>19000 && Area_3<20900
        
        set(handles.urun_ic_sekli,'String','Ürün İç Şekli : Büyük Yuvarlak');
        
    elseif  Area_3>21100 && Area_3<23000
        
        set(handles.urun_ic_sekli,'String','Ürün İç Şekli : Büyük Dikdörtgen');
        
    end
    
    writeDigitalPin(myPi, 20,0); %aydınlatma
        
    if value==urunvalue && Area_3>urunarea_ic-900 && Area_3<urunarea_ic+900 && Area_2>urunarea_dis-900 && Area_2<urunarea_dis+900 
        
        % && Kenar1>kenar1-25 && Kenar1<kenar1+25 && Kenar2>kenar2-25 && Kenar2<kenar2+25
        
        
        robot_arm_processing_true(s_sol,s_sag,s_zemin,myPi);
        pause(1);
           
        dogru_deger=dogru_deger+1;
        toplam_dogru=toplam_dogru+1;
        
        deg=sprintf('D:%d  Y:%d',dogru_deger,yanlis_deger);
        set(handles.(urun_bilgisi),'String',deg);
        
        topdog=sprintf('Toplam Dogru : %d',toplam_dogru);
        set(handles.toplam_dogru_,'String',topdog);
             
    else
        
       
        robot_arm_processing_false(s_sol,s_sag,s_zemin,myPi);
        pause(1);
        
        yanlis_deger=yanlis_deger+1;
        toplam_yanlis=toplam_yanlis+1;
        
        deg=sprintf('D:%d  Y:%d',dogru_deger,yanlis_deger);
        set(handles.(urun_bilgisi),'String',deg);
        
        topyan=sprintf('Toplam Yanlis : %d',toplam_yanlis);
        set(handles.toplam_yanlis_,'String',topyan);
       
    end
          
end

 writeDigitalPin(myPi, 12,1); %lazer
 
end

end

% --- Executes on button press in dur.
function dur_Callback(hObject, eventdata, handles)
% hObject    handle to dur (see GCBO)
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)

global systemvalue
global dogru_deger
global yanlis_deger
global myPi

dogru_deger=0;
yanlis_deger=0;

systemvalue=0;
fprintf('0');

axes(handles.axes15);
imshow('gri.jpg');

axes(handles.axes16);
imshow('gri.jpg');

axes(handles.axes17);
imshow('gri.jpg');

axes(handles.axes18);
imshow('gri.jpg');

    set(handles.urun_bilgisi_1,'String','D:0   Y:0');
    set(handles.urun_bilgisi_2,'String','D:0   Y:0');
    set(handles.urun_bilgisi_3,'String','D:0   Y:0');
    set(handles.urun_bilgisi_4,'String','D:0   Y:0');
    set(handles.urun_bilgisi_5,'String','D:0   Y:0');
    set(handles.urun_bilgisi_6,'String','D:0   Y:0');
    set(handles.urun_bilgisi_7,'String','D:0   Y:0');
    set(handles.urun_bilgisi_8,'String','D:0   Y:0');
    set(handles.urun_bilgisi_9,'String','D:0   Y:0');
    set(handles.urun_bilgisi_10,'String','D:0   Y:0');
    set(handles.urun_bilgisi_11,'String','D:0   Y:0');
    set(handles.urun_bilgisi_12,'String','D:0   Y:0');
    set(handles.urun_bilgisi_13,'String','D:0   Y:0');
    set(handles.urun_bilgisi_14,'String','D:0   Y:0');
    
    writeDigitalPin(myPi, 12,0); %lazer
    writeDigitalPin(myPi, 20,0); %aydınlatma
    writeDigitalPin(myPi, 16,0); %motor
    writeDigitalPin(myPi, 21,0); %mıknatıs

end

% --- Executes when selected object is changed in radiogroup.
function radiogroup_SelectionChangedFcn(hObject, eventdata, handles)
% hObject    handle to the selected object in radiogroup 
% eventdata  reserved - to be defined in a future version of MATLAB
% handles    structure with handles and user data (see GUIDATA)
global urun_bilgisi
global dogru_deger
global yanlis_deger
global urun_case

global urunvalue
global urunarea_ic
global urunarea_dis
global kenar1
global kenar2

global yanlis_deger1
global yanlis_deger2
global yanlis_deger3
global yanlis_deger4
global yanlis_deger5
global yanlis_deger6
global yanlis_deger7
global yanlis_deger8
global yanlis_deger9
global yanlis_deger10
global yanlis_deger11
global yanlis_deger12
global yanlis_deger13
global yanlis_deger14

global dogru_deger1
global dogru_deger2
global dogru_deger3
global dogru_deger4
global dogru_deger5
global dogru_deger6
global dogru_deger7
global dogru_deger8
global dogru_deger9
global dogru_deger10
global dogru_deger11
global dogru_deger12
global dogru_deger13
global dogru_deger14

if urun_case==1  
    yanlis_deger1=yanlis_deger;
    dogru_deger1=dogru_deger;
end
if  urun_case==2
    yanlis_deger2=yanlis_deger;
    dogru_deger2=dogru_deger;
end
if  urun_case==3
    yanlis_deger3=yanlis_deger;
    dogru_deger3=dogru_deger;
end
if  urun_case==4
    yanlis_deger4=yanlis_deger;
    dogru_deger4=dogru_deger;
end
if  urun_case==5
    yanlis_deger5=yanlis_deger;
    dogru_deger5=dogru_deger;
end
if  urun_case==6
    yanlis_deger6=yanlis_deger;
    dogru_deger6=dogru_deger;
end
if  urun_case==7
    yanlis_deger7=yanlis_deger;
    dogru_deger7=dogru_deger;
end
if  urun_case==8
    yanlis_deger8=yanlis_deger;
    dogru_deger8=dogru_deger;
end
if  urun_case==9
    yanlis_deger9=yanlis_deger;
    dogru_deger9=dogru_deger;
end
if  urun_case==10
    yanlis_deger10=yanlis_deger;
    dogru_deger10=dogru_deger;
end
if  urun_case==11
    yanlis_deger11=yanlis_deger;
    dogru_deger11=dogru_deger;
end
if  urun_case==12
    yanlis_deger12=yanlis_deger;
    dogru_deger12=dogru_deger;
end
if  urun_case==13
    yanlis_deger13=yanlis_deger;
    dogru_deger13=dogru_deger;
end
if  urun_case==14
    yanlis_deger14=yanlis_deger;
    dogru_deger14=dogru_deger;  
end


switch get(eventdata.NewValue,'Tag')
    case 'urun_1'
         urun_bilgisi='urun_bilgisi_1';   
         fprintf('Ürün bir seçildi\n');
         urun_case=1;
         urunvalue=1;
         urunarea_ic=8500;
         urunarea_dis=76000;
         kenar1=210;
         kenar2=360;
         
         axes(handles.axes15);
         imshow('kirmizi_buyuk_daire_orta.jpg');
                  
         set(handles.secilen_urun,'String','Seçilen Ürün : urun_1');
         
         if(yanlis_deger1==0 && dogru_deger1==0)
         dogru_deger=0;
         yanlis_deger=0;
         else
             yanlis_deger=yanlis_deger1;
             dogru_deger=dogru_deger1;
         end

     case 'urun_2'
        urun_bilgisi='urun_bilgisi_2';
        fprintf('Ürün iki seçildi\n');
         urun_case=2;
         urunvalue=1;
         urunarea_ic=20000;
         urunarea_dis=68000;
         kenar1=210;
         kenar2=310;
         
         axes(handles.axes15);
         imshow('kirmizi_daire_buyuk.jpg');
               
         set(handles.secilen_urun,'String','Seçilen Ürün : urun_2');
         
         if(yanlis_deger2==0 && dogru_deger2==0)
         dogru_deger=0;
         yanlis_deger=0;
         else
             yanlis_deger=yanlis_deger2;
             dogru_deger=dogru_deger2;
         end
 
    case'urun_3'
        urun_bilgisi='urun_bilgisi_3';
         fprintf('Ürün üç seçildi\n');
         urun_case=3;
         urunvalue=1;
         urunarea_ic=8500;
         urunarea_dis=68000;
         kenar1=210;
         kenar2=310;
         
         axes(handles.axes15);
         imshow('kirmizi_daire_orta.jpg');
           
         set(handles.secilen_urun,'String','Seçilen Ürün : urun_3');
         
         if(yanlis_deger3==0 && dogru_deger3==0)
         dogru_deger=0;
         yanlis_deger=0;
         else
             yanlis_deger=yanlis_deger3;
             dogru_deger=dogru_deger3;
         end
 


    case'urun_4'
        urun_bilgisi='urun_bilgisi_4';
         fprintf('Ürün dört seçildi\n');
         urun_case=4;
         urunvalue=1;
         urunarea_ic=22000;
         urunarea_dis=68000;
         kenar1=210;
         kenar2=310;
         
         axes(handles.axes15);
         imshow('kirmizi_dikdortgen_buyuk.jpg');
             
         set(handles.secilen_urun,'String','Seçilen Ürün : urun_4');
         
         if(yanlis_deger4==0 && dogru_deger4==0)
         dogru_deger=0;
         yanlis_deger=0;
         else
             yanlis_deger=yanlis_deger4;
             dogru_deger=dogru_deger4;
         end

    case'urun_5'
        urun_bilgisi='urun_bilgisi_5';
         fprintf('Ürün beş seçildi\n');
         urun_case=5;
         urunvalue=1;
         urunarea_ic=12000;
         urunarea_dis=68000;
         kenar1=210;
         kenar2=310;
         
         axes(handles.axes15);
         imshow('kirmizi_dikdortgen_kucuk.jpg');
                  
         set(handles.secilen_urun,'String','Seçilen Ürün : urun_5');
         
         if(yanlis_deger5==0 && dogru_deger5==0)
         dogru_deger=0;
         yanlis_deger=0;
         else
             yanlis_deger=yanlis_deger5;
             dogru_deger=dogru_deger5;
         end
 
    case'urun_6'
        urun_bilgisi='urun_bilgisi_6';
         fprintf('Ürün altı seçildi\n');
         urun_case=6;
         urunvalue=2;
         urunarea_ic=2000;
         urunarea_dis=68000;
         kenar1=210;
         kenar2=310;
         
         axes(handles.axes15);
         imshow('yesil_daire_kucuk.jpg');
                  
         set(handles.secilen_urun,'String','Seçilen Ürün : urun_6');
         
         if(yanlis_deger6==0 && dogru_deger6==0)
         dogru_deger=0;
         yanlis_deger=0;
         else
             yanlis_deger=yanlis_deger6;
             dogru_deger=dogru_deger6;
         end

    case'urun_7'
        urun_bilgisi='urun_bilgisi_7';
         fprintf('Ürün yedi seçildi\n');
         urun_case=7;
         urunvalue=2;
         urunarea_ic=8500;
         urunarea_dis=68000;
         kenar1=210;
         kenar2=310;
         
         axes(handles.axes15);
         imshow('yesil_daire_orta.jpg');
              
         set(handles.secilen_urun,'String','Seçilen Ürün : urun_7');
         
         if(yanlis_deger7==0 && dogru_deger7==0)
         dogru_deger=0;
         yanlis_deger=0;
         else
             yanlis_deger=yanlis_deger7;
             dogru_deger=dogru_deger7;
         end
 
    case'urun_8'
        urun_bilgisi='urun_bilgisi_8';
         fprintf('Ürün sekiz seçildi\n');
         urun_case=8;
         urunvalue=3;
         urunarea_ic=8500;
         urunarea_dis=76000;
         kenar1=210;
         kenar2=360;
         
         axes(handles.axes15);
         imshow('mavi_buyuk_daire_orta.jpg');
              
         set(handles.secilen_urun,'String','Seçilen Ürün : urun_8');
         
         if(yanlis_deger8==0 && dogru_deger8==0)
         dogru_deger=0;
         yanlis_deger=0;
         else
             yanlis_deger=yanlis_deger8;
             dogru_deger=dogru_deger8;
         end
 
    case'urun_9'
        urun_bilgisi='urun_bilgisi_9';
         fprintf('Ürün dokuz seçildi\n');
         urun_case=9;
         urunvalue=3;
         urunarea_ic=20000;
         urunarea_dis=68000;
         kenar1=210;
         kenar2=310;
         
         axes(handles.axes15);
         imshow('mavi_daire_buyuk.jpg');
                  
         set(handles.secilen_urun,'String','Seçilen Ürün : urun_9');
         
         if(yanlis_deger9==0 && dogru_deger9==0)
         dogru_deger=0;
         yanlis_deger=0;
         else
             yanlis_deger=yanlis_deger9;
             dogru_deger=dogru_deger9;
         end
 
    case'urun_10'
        urun_bilgisi='urun_bilgisi_10';
         fprintf('Ürün on seçildi\n');
         urun_case=10;
         urunvalue=3;
         urunarea_ic=2000;
         urunarea_dis=68000;
         kenar1=210;
         kenar2=310;
                  
         axes(handles.axes15);
         imshow('mavi_daire_kucuk.jpg');
         
         set(handles.secilen_urun,'String','Seçilen Ürün : urun_10');
         
         if(yanlis_deger10==0 && dogru_deger10==0)
         dogru_deger=0;
         yanlis_deger=0;
         else
             yanlis_deger=yanlis_deger10;
             dogru_deger=dogru_deger10;
         end

    case'urun_11'
        urun_bilgisi='urun_bilgisi_11';
         fprintf('Ürün on bir seçildi\n');
         urun_case=11;
         urunvalue=3;
         urunarea_ic=12000;
         urunarea_dis=68000;
         kenar1=210;
         kenar2=310;
              
         axes(handles.axes15);
         imshow('mavi_dikdörtgen.jpg');
                 
         set(handles.secilen_urun,'String','Seçilen Ürün : urun_11');
        
         if(yanlis_deger11==0 && dogru_deger11==0)
         dogru_deger=0;
         yanlis_deger=0;
         else
             yanlis_deger=yanlis_deger11;
             dogru_deger=dogru_deger11;
         end

    case'urun_12'
        urun_bilgisi='urun_bilgisi_12';
     fprintf('Ürün on iki seçildi\n');
         urun_case=12;
         urunvalue=3;
         urunarea_ic=5200;
         urunarea_dis=68000;
         kenar1=210;
         kenar2=310;
                 
         axes(handles.axes15);
         imshow('mavi_ucgen.jpg');
                  
         set(handles.secilen_urun,'String','Seçilen Ürün : urun_12');
         
         if(yanlis_deger12==0 && dogru_deger12==0)
         dogru_deger=0;
         yanlis_deger=0;
         else
             yanlis_deger=yanlis_deger12;
             dogru_deger=dogru_deger12;
         end
 
    case'urun_13'
        urun_bilgisi='urun_bilgisi_13';
         fprintf('Ürün on üç seçildi\n');
         urun_case=13;
         urunvalue=2;
         urunarea_ic=22000;
         urunarea_dis=68000;
         kenar1=210;
         kenar2=310;
         
         axes(handles.axes15);
         imshow('yesil_dildortgen_buyuk.jpg');
                  
         set(handles.secilen_urun,'String','Seçilen Ürün : urun_13');
         
         if(yanlis_deger13==0 && dogru_deger13==0)
         dogru_deger=0;
         yanlis_deger=0;
         else
             yanlis_deger=yanlis_deger13;
             dogru_deger=dogru_deger13;
         end
         
    case'urun_14'
        urun_bilgisi='urun_bilgisi_14';
         fprintf('Ürün on dört seçildi\n');
         urun_case=14;
         urunvalue=2;
         urunarea_ic=5200;
         urunarea_dis=68000;
         kenar1=210;
         kenar2=310;
              
         axes(handles.axes15);
         imshow('yesil_ucgen.jpg');
                  
         set(handles.secilen_urun,'String','Seçilen Ürün : urun_14');

        if(yanlis_deger14==0 && dogru_deger14==0)
         dogru_deger=0;
         yanlis_deger=0;
        else
             yanlis_deger=yanlis_deger14;
             dogru_deger=dogru_deger14;
        end
end     
end
 


%Fonksiyonlar

function [myPi,myCam,s_sol,s_sag,s_zemin]=raspi_congigure_processing()
%%

myPi = raspi();
myCam = cameraboard(myPi,'Resolution','640x480');

configurePin(myPi,19,'DigitalInput');   %LDR
configurePin(myPi,20,'DigitalOutput');  %LED
configurePin(myPi,16,'DigitalOutput');  %Motor
configurePin(myPi,21,'DigitalOutput');  %Elektro mıknatıs
configurePin(myPi,12,'DigitalOutput');  %Lazer

s_sol = servo (myPi, 5, 'MaxPulseDuration', 0.0024, 'MinPulseDuration', 0.0006);    %Servo sol
s_sag = servo (myPi, 6, 'MaxPulseDuration', 0.0024, 'MinPulseDuration', 0.0006);    %Servo sağ
s_zemin = servo (myPi, 13 , 'MaxPulseDuration', 0.0024, 'MinPulseDuration', 0.0006);    %Servo zemin

end% Raspi,Cam,Pin yapı fonksiyonu.

function [urun]=camera_processing(camera)
%%
mySnap = snapshot(camera);

% imshow(mySnap);    % kameraya atılacak
urun=mySnap;

end                             % Resim çekme fonksiyonu.

function [value,resim_bw]=color_processing(resim)

global Red_value
global Green_value
global Blue_value


%%
R=resim(:,:,1);
gri_R=rgb2gray(resim);
gri_R=gri_R+15;
tespit_R=imsubtract(R,gri_R);
ort_R=graythresh(tespit_R);
bw_R=im2bw(tespit_R,ort_R);

%%
G=resim(:,:,2);
gri_G=rgb2gray(resim);
gri_G=gri_G+15;
tespit_G=imsubtract(G,gri_G);
ort_G=graythresh(tespit_G);
bw_G=im2bw(tespit_G,ort_G);

%%
B=resim(:,:,3);
gri_B=rgb2gray(resim);
gri_B=gri_B+5;
tespit_B=imsubtract(B,gri_B);
ort_B=graythresh(tespit_B);
bw_B=im2bw(tespit_B,ort_B);

%%
[satir_R sutun_R]=size(bw_R);
Red_value=0;
for i=1:satir_R
    for j=1:sutun_R
        if bw_R(i,j)>0
            Red_value=Red_value+1;
        end
    end
end

%%
[satir_G sutun_G]=size(bw_G);
Green_value=0;
for i=1:satir_G
    for j=1:sutun_G
        if bw_G(i,j)>0
            Green_value=Green_value+1;
        end
    end
end

%%
[satir_B sutun_B]=size(bw_B);
Blue_value=0;
for i=1:satir_B
    for j=1:sutun_B
        if bw_B(i,j)>0
            Blue_value=Blue_value+1;
        end
    end
end

%%
value=0;
if Red_value>Green_value && Red_value>Blue_value
    value=1;
elseif Green_value>Red_value && Green_value>Blue_value
    value=2;
elseif Blue_value>Red_value && Blue_value>Green_value
    value=3;
end

%%
if value==1
    resim_bw=bw_R;

elseif value==2
    resim_bw=bw_G;
    
elseif value==3
    resim_bw=bw_B;
end
%%
fprintf('Kırmızı değeri : %d \nYeşil değeri : %d \nMavi değeri : %d',Red_value, Green_value, Blue_value);

end                     % Renk tanımlama fonksiyonu.

function [Kenar1,Kenar2]=figure_processing(resim)
[satir sutun]=size(resim);
gelensekil=0;
%%
for i=1:satir
    for j=1:sutun
        gelensekil=length(find(resim(i,:)));
           deger1=resim(i,j);
            if deger1==1
                birx=j;
                biry=i;
                break
            end
    end
    if deger1 ==1
        break
    end
end
%%
if gelensekil > 50   
    for  j=sutun:-1:1
    for  i=1:satir 
           deger1=resim(i,j);
            if deger1==1
                ikix=j;
                ikiy=i;
                break
            end
    end
    if deger1 ==1
        break
    end
end
%%
 for  j=sutun:-1:1
    for  i=satir:-1:1
           deger1=resim(i,j);
            if deger1==1
                ucx=j;
                ucy=i;
                break
            end
    end
    if deger1 ==1
        break
    end
end
%%
for i=satir:-1:1
    for j=1:sutun
           deger1=resim(i,j);
            if deger1==1
                dortx=j;
                dorty=i;
                break
            end
    end
    if deger1 ==1
        break
    end
end
    
%%
else 
    
    for i=1:satir
    for j=1:sutun
        
           deger1=resim(i,j);
            if deger1==1
                birx=j;
                biry=i;
                break
            end
    end
    if deger1 ==1
        break
    end
    end
    
     %% 
    for j=sutun:-1:1
    for i=1:satir
        
           deger1=resim(i,j);
            if deger1==1
                ikix=j;
                ikiy=i;
                break
            end
    end
    if deger1 ==1
        break
    end
    end 
    
    %%
    for   i=satir:-1:1
    for   j=sutun:-1:1
        
           deger1=resim(i,j);
            if deger1==1
                ucx=j;
                ucy=i;
                break
            end
    end
    if deger1 ==1
        break
    end
    end
    
    %%
    for  j=1:sutun
    for    i=satir:-1:1
        
           deger1=resim(i,j);
            if deger1==1
                dortx=j;
                dorty=i;
                break
            end
    end
    if deger1 ==1
        break
    end
     end   
end
Kenar1=sqrt((birx-ikix)*(birx-ikix)+(biry-ikiy)*(biry-ikiy));
Kenar2=sqrt((ucx-ikix)*(ucx-ikix)+(ucy-ikiy)*(ucy-ikiy));
end                     % Kenar uzunluğu bulma fonksiyonu.

function [Area_1,Centroid_1,imag_bw]=area_processing_1(resim)

imag_bw=bwareaopen(resim,100);

[B,L]=bwboundaries(imag_bw,'noholes');

%% Resimde mevcut olan nesnelerin tanımlanması ve etiketlenmesi
imag_bw_label=bwlabel(imag_bw);% bw görüntüsünde bulunan nesneleri tanımlar.

% figure;imshow(label2rgb(imag_bw_label));%etiketli görüntünün gösterimi

% Area = Alan 
% Centroid= Ağırlık merkezi
% Bounding box= Sınırlayıcı kutu

stats=regionprops(L,'Area','Centroid','BoundingBox');

Area_1=stats.Area;
Centroid_1=stats.Centroid;


end                       % Alan hesabı fonksiyonu.

function [Area_2,Centroid_2]=area_processing_2(resim)

resim_bw=imfill(resim,'holes');

imag_bw=bwareaopen(resim_bw,100);

[B,L]=bwboundaries(imag_bw,'noholes');

%% Resimde mevcut olan nesnelerin tanımlanması ve etiketlenmesi
imag_bw_label=bwlabel(imag_bw);% bw görüntüsünde bulunan nesneleri tanımlar.

% Area = Alan 
% Centroid= Ağırlık merkezi
% Bounding box= Sınırlayıcı kutu

stats=regionprops(L,'Area','Centroid','BoundingBox');

Area_2=stats.Area;
Centroid_2=stats.Centroid;

end                       % Alan hesabı fonksiyonu.

function robot_arm_processing_base(s_sol,s_sag,s_zemin)
%%                                          % Robot base konumuna getirildi.  
writePosition(s_sag, 10);
pause(1); 
writePosition(s_sol, 150);
pause(1);
writePosition(s_zemin, 90);
pause(1);

end        % Robot base konumuna gönderme fonksiyonu.

function robot_arm_processing_true(s_sol,s_sag,s_zemin,myPi)
%%                                          % Robot ürün üzerine getirilir. 
for k=150 : -1 : 100     
writePosition(s_sol, k);
pause(0.01);
end
for j=10 : 1 : 110     
writePosition(s_sag, j);
pause(0.01); 
end 
writeDigitalPin(myPi, 21,1);                % Elektomıknatıs enerjilendi. Ürün tutuldu.
%%                                          % Robot ürünü geriye çekti. 
for j=110 : -1 : 10    
writePosition(s_sag, j);
pause(0.01); 
end
for k=100 : 1 : 150     
writePosition(s_sol, k);
pause(0.01);
end
%%                                          % Robot doğru ürün kutusuna getirilir. 
for i=90 : 1 : 150     
writePosition(s_zemin, i);
pause(0.01); 
end
for k=150 : -1 : 110     
writePosition(s_sol, k);
pause(0.01);
end
for j=10 : 1 : 100     
writePosition(s_sag, j);
pause(0.01);
end
writeDigitalPin(myPi, 21,0);                % Elektomıknatıs enerjisi kesildi. Ürün bırakıldı.
%%                                          % Robot base konumuna getirildi. 
for k=110 : 1 : 150   
writePosition(s_sol, k);
pause(0.01);
end
for j=100 : -1 : 10     
writePosition(s_sag, j);
pause(0.01);
end
for i=150 : -1 : 90     
writePosition(s_zemin, i);
pause(0.01); 
end
end   % Robot doğru ürün sınıflandırma fonksiyonu.

function robot_arm_processing_false(s_sol,s_sag,s_zemin,myPi)
%%                                          % Robot ürün üzerine getirilir. 
for k=150 : -1 : 100 
writePosition(s_sol, k);
pause(0.01);
end
for j=10 : 1 : 110    
writePosition(s_sag, j);
pause(0.01); 
end 
writeDigitalPin(myPi, 21,1);                % Elektomıknatıs enerjilendi. Ürün tutuldu.
%%                                          % Robot ürünü geriye çekti. 
for j=110 : -1 : 10 
writePosition(s_sag, j);
pause(0.01);
end
for k=100 : 1 : 150     
writePosition(s_sol, k);
pause(0.01);
end
%%                                          % Robot hatalı ürün kutusuna getirilir. 
for i=90 : -1 : 30     
writePosition(s_zemin, i);
pause(0.01);  
end
for k=150 : -1 : 100     
writePosition(s_sol, k);
pause(0.01);
end
for j=10 : 1 : 100     
writePosition(s_sag, j);
pause(0.01); 
end
writeDigitalPin(myPi, 21,0);                % Elektomıknatıs enerjisi kesildi. Ürün bırakıldı.
%%                                          % Robot base konumuna getirildi. 
for k=100 : 1 : 150     
writePosition(s_sol, k);
pause(0.01);
end
for j=100 : -1 : 10     
writePosition(s_sag, j);
pause(0.01); 
end
for i=30 : 1 : 90     
writePosition(s_zemin, i);
pause(0.01);  
end
end  % Robot hatalı ürün sınıflandırma fonksiyonu.
